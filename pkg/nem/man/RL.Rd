% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RL.R
\name{RL}
\alias{RL}
\title{Relocating Links algorithm (RL algorithm)}
\source{
Cugmas M, Ferligoj A, ?iberna A (2018) Generating global network structures by triad types. PLoS ONE 13(5): e0197514. https://doi.org/10.1371/journal.pone.0197514
}
\usage{
RL(ideal.net, initial.net, triads = "forb", k = 100, custom.triads = NULL)
}
\arguments{
\item{ideal.net}{Network with an ideal (desired) blockmodel; of class \code{matrix}.}

\item{initial.net}{Initial network; of class \code{matrix}.}

\item{triads}{Which types of triads has to be considered (allowed \code{allow}, forbidden \code{forb}, all \code{all} or custom \code{cust}).}

\item{k}{Number of iterations.}

\item{custom.triads}{Additional terms to be considered. Only if \code{terms = "cust"}.}
}
\value{
A list contiainig: \code{new.network} which is the generated network; and \code{CR} which is
a vector of CR values (a value is calculated after each iteration).
}
\description{
The function generate random network considering the selected types of triads.
}
\examples{
# generate initial and ideal network
cohesiveBM <- rbind(c("com", "nul"), c("nul", "com"))
initial <- gen.network.LE(BM = cohesiveBM, LE = 0, n = 12, size = rep(0.5, 2))
random <- gen.network.LE(BM = cohesiveBM, LE = 1, n = 12, size = rep(0.5, 2))
# generate network with the RL algorithm
generatedNetwork <- RL(ideal.net = ideal.net, initial.net = random.net, triads = "all", k = 1000)
# evaluate the obtained network
res <- blockmodeling::optRandomParC(M = generatedNetwork[[1]], k = 2, approaches = "bin", blocks = c("null", "com"), rep = 1000, nCores = 0)
plot(res)
}
\author{
Marjan Cugmas
}
