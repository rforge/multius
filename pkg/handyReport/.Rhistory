res[i, 4+nravni] <- ifelse(model[[1]][1,5] < 0.001, yes = "< 0.01", no = round(model[[1]][1,5], 3))
}
labele <- c(ravni, "F", "df 1", "df 2", "p")
colnames(res) <- labele
rownames(res) <- intervalna
return(res)
}
report.anova(ordinalna = c("cyl", "gear"), intervalna = c("hp", "disp", "qsec"), dataset = mtcars)
report.anova <- function(ordinalna, intervalna, dataset){
if (is.factor(dataset[, which(names(dataset)==ordinalna)]) == FALSE){
dataset[, which(names(dataset)==ordinalna)] <- as.factor(dataset[, which(names(dataset)==ordinalna)])
}
if (length(ordinalna) > 1) {
stop("More than one categorical variable is provided.")
} else {
ravni <- levels(dataset[, which(names(dataset)==ordinalna)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(intervalna), ncol = 4 + nravni)
for (i in 1:length(intervalna)) {
data <- dataset[, c(which(names(dataset)==ordinalna),  which(names(dataset)==intervalna[i]))]
means <- round(as.vector(by(data = data[, intervalna[i]], INDICES = data[, ordinalna], mean)), 2)
res[i, 1:nravni] <- means
model <- summary(aov(data[, intervalna[i]] ~ as.factor(data[, ordinalna])))
res[i, 1+nravni] <- round(model[[1]][1,4], 2)
res[i, 2+nravni] <- model[[1]][1,1]
res[i, 3+nravni] <- model[[1]][2,1]
res[i, 4+nravni] <- ifelse(model[[1]][1,5] < 0.001, yes = "< 0.01", no = round(model[[1]][1,5], 3))
}
labele <- c(ravni, "F", "df 1", "df 2", "p")
colnames(res) <- labele
rownames(res) <- intervalna
}
return(res)
}
report.anova(ordinalna = c("cyl", "gear"), intervalna = c("hp", "disp", "qsec"), dataset = mtcars)
length(ordinalna) > 1
report.anova <- function(ordinalna, intervalna, dataset){
if (is.factor(dataset[, which(names(dataset)==ordinalna)]) == FALSE){
dataset[, which(names(dataset)==ordinalna)] <- as.factor(dataset[, which(names(dataset)==ordinalna)])
}
if (length(ordinalna) > 1) {
stop("More than one categorical variable is provided.")
}
if (length(ordinalna) > 1)  {
ravni <- levels(dataset[, which(names(dataset)==ordinalna)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(intervalna), ncol = 4 + nravni)
for (i in 1:length(intervalna)) {
data <- dataset[, c(which(names(dataset)==ordinalna),  which(names(dataset)==intervalna[i]))]
means <- round(as.vector(by(data = data[, intervalna[i]], INDICES = data[, ordinalna], mean)), 2)
res[i, 1:nravni] <- means
model <- summary(aov(data[, intervalna[i]] ~ as.factor(data[, ordinalna])))
res[i, 1+nravni] <- round(model[[1]][1,4], 2)
res[i, 2+nravni] <- model[[1]][1,1]
res[i, 3+nravni] <- model[[1]][2,1]
res[i, 4+nravni] <- ifelse(model[[1]][1,5] < 0.001, yes = "< 0.01", no = round(model[[1]][1,5], 3))
}
labele <- c(ravni, "F", "df 1", "df 2", "p")
colnames(res) <- labele
rownames(res) <- intervalna
}
return(res)
}
report.anova(ordinalna = c("cyl", "gear"), intervalna = c("hp", "disp", "qsec"), dataset = mtcars)
report.anova <- function(ordinalna, intervalna, dataset){
if (is.factor(dataset[, which(names(dataset)==ordinalna)]) == FALSE){
dataset[, which(names(dataset)==ordinalna)] <- as.factor(dataset[, which(names(dataset)==ordinalna)])
}
if (length(ordinalna) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(dataset[, which(names(dataset)==ordinalna)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(intervalna), ncol = 4 + nravni)
for (i in 1:length(intervalna)) {
data <- dataset[, c(which(names(dataset)==ordinalna),  which(names(dataset)==intervalna[i]))]
means <- round(as.vector(by(data = data[, intervalna[i]], INDICES = data[, ordinalna], mean)), 2)
res[i, 1:nravni] <- means
model <- summary(aov(data[, intervalna[i]] ~ as.factor(data[, ordinalna])))
res[i, 1+nravni] <- round(model[[1]][1,4], 2)
res[i, 2+nravni] <- model[[1]][1,1]
res[i, 3+nravni] <- model[[1]][2,1]
res[i, 4+nravni] <- ifelse(model[[1]][1,5] < 0.001, yes = "< 0.01", no = round(model[[1]][1,5], 3))
}
labele <- c(ravni, "F", "df 1", "df 2", "p")
colnames(res) <- labele
rownames(res) <- intervalna
return(res)
}
report.anova(ordinalna = c("cyl", "gear"), intervalna = c("hp", "disp", "qsec"), dataset = mtcars)
library(reporter)
library(reporter)
library(reporter)
}
report.freqTab <- function(x, dec = 2, useNA = "always", ...){
if (is.factor(x) == FALSE) x <- as.factor(x)
tblValid <- table(x, ...)
cumFreqValid <- cumsum(tblValid)
percValid <- tblValid/sum(tblValid) * 100
cumPercValid <- cumsum(percValid)
if (!is.null(dec)) {
percValid <- round(percValid, dec)
cumPercValid <- round(cumPercValid, dec)
}
frekValid <- as.data.frame(cbind("Category" = names(tblValid), "Valid %" = percValid, "Valid Cum. %" = cumPercValid), stringsAsFactors = FALSE)
if (useNA != "no"){
tbl <- table(x, useNA = useNA, ...)
cumFreq <- cumsum(tbl)
perc <- tbl/sum(tbl) * 100
cumPerc <- cumsum(perc)
if (!is.null(dec)) {
perc <- round(perc, dec)
cumPerc <- round(cumPerc, dec)
}
frekTab <- as.data.frame(cbind("Category" = names(tbl),  "Freq." = tbl, "Cum. Freq." = cumFreq, "%" = perc, "Cum. %" = cumPerc), stringsAsFactors = FALSE)
freqTab <- merge(frekTab, frekValid, by = "Category", all = TRUE)
freqTab[is.na(freqTab$Category), "Category"] <- "Missing value"
freqTab[is.na(freqTab)] <- ""
}
if (useNA == "no") freqTab <- frekValid
return(freqTab)
}
x <- mtcars$gear
x[sample(1:length(x), size = 5, replace = FALSE)] <- NA
report.freqTab(x = x, dec = 3, useNA = "always")
report.freqTab(x = x, dec = 1, useNA = "always")
library(reporter)
library(reporter)
report.freqTab(c(10))
mtcars
library(reporter)
x <- mtcars$gear
x[sample(1:length(x), size = 5, replace = FALSE)] <- NA
report.freqTab(x = x, dec = 2, useNA = "always")
library(reporter)
x <- mtcars$gear
x[sample(1:length(x), size = 5, replace = FALSE)] <- NA
report.freqTab(x = x, dec = 2, useNA = "always")
report.anova <- function(ordinalna, intervalna, dataset){
if (is.factor(dataset[, which(names(dataset)==ordinalna)]) == FALSE){
dataset[, which(names(dataset)==ordinalna)] <- as.factor(dataset[, which(names(dataset)==ordinalna)])
}
if (length(ordinalna) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(dataset[, which(names(dataset)==ordinalna)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(intervalna), ncol = 4 + nravni)
for (i in 1:length(intervalna)) {
data <- dataset[, c(which(names(dataset)==ordinalna),  which(names(dataset)==intervalna[i]))]
means <- round(as.vector(by(data = data[, intervalna[i]], INDICES = data[, ordinalna], mean)), 2)
res[i, 1:nravni] <- means
model <- summary(aov(data[, intervalna[i]] ~ as.factor(data[, ordinalna])))
res[i, 1+nravni] <- round(model[[1]][1,4], 2)
res[i, 2+nravni] <- model[[1]][1,1]
res[i, 3+nravni] <- model[[1]][2,1]
res[i, 4+nravni] <- ifelse(model[[1]][1,5] < 0.001, yes = "< 0.01", no = round(model[[1]][1,5], 3))
}
labele <- c(ravni, "F", "df 1", "df 2", "p")
colnames(res) <- labele
rownames(res) <- intervalna
return(res)
}
report.anova(ordinalna = "cyl", intervalna = c("hp", "disp", "qsec"), dataset = mtcars)
report.ttest(ordinalna = "vs", intervalna = c("disp", "wt", "qsec"), dataset = mtcars)
library(reporter)
report.ttest(ordinalna = "vs", intervalna = c("disp", "wt", "qsec"), dataset = mtcars)
library(reporter)
report.ttest(ordinalna = "vs", intervalna = c("disp", "wt", "qsec"), dataset = mtcars)
report.propTable(x = mtcars$gear, y = mtcars$carb, margin = 1, digits = 2)
dec = 2
cumulative = TRUE
useNA = "always"
x <- mtcars$gear
x[sample(1:length(x), size = 5, replace = FALSE)] <- NA
if (is.factor(x) == FALSE) x <- as.factor(x)
tblValid <- table(x)
cumFreqValid <- cumsum(tblValid)
percValid <- tblValid/sum(tblValid) * 100
cumPercValid <- cumsum(percValid)
if (!is.null(dec)) {
percValid <- round(percValid, dec)
cumPercValid <- round(cumPercValid, dec)
}
frekValid <- as.data.frame(cbind("Category" = names(tblValid), "Valid %" = percValid, "Valid Cum. %" = cumPercValid), stringsAsFactors = FALSE)
frekValid <- rbind(frekValid, c(NA,0,0))
if (useNA != "no"){
tbl <- table(x, useNA = useNA)
cumFreq <- cumsum(tbl)
perc <- tbl/sum(tbl) * 100
cumPerc <- cumsum(perc)
if (!is.null(dec)) {
perc <- round(perc, dec)
cumPerc <- round(cumPerc, dec)
}
frekTab <- as.data.frame(cbind("Category" = names(tbl),  "Freq." = tbl, "Cum. Freq." = cumFreq, "%" = perc, "Cum. %" = cumPerc), stringsAsFactors = FALSE)
freqTab <- merge(frekTab, frekValid, by = "Category", all = TRUE, sort = FALSE)
freqTab[is.na(freqTab$Category), "Category"] <- "Missing value"
freqTab[is.na(freqTab)] <- ""
}
freqTab
if (useNA == "no") freqTab <- frekValid
freqTab
freqTab[, -c("Cum. Freq.", "Cum. %", "Valid Cum. %")]
which(colnames(freqTab) %in% c("Cum. Freq.", "Cum. %", "Valid Cum. %"))
freqTab[, -which(colnames(freqTab) %in% c("Cum. Freq.", "Cum. %", "Valid Cum. %"))]
gamma(5)
gamma(5)
ordinal <- mtcars$vs
interval <- mtcars$wt
ordinal
table(ordinal)
by(ordinal, interval, sd)
by(data = interval, ordinal, sd)
by(data = interval, ordinal, table)
by(data = interval, ordinal, length)
by(data = interval, ordinal, length) - 1
(by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd)
by(data = interval, ordinal, length) - 1
by(data = interval, ordinal, sd)
sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))
by(data = interval, ordinal, length)
length(interval)
sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2)
sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2)
by(data = interval, ordinal, mean)
diff(by(data = interval, ordinal, mean))
diff(by(data = interval, ordinal, mean))/sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2)
diff(by(data = interval, ordinal, mean))/sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2)
g <- diff(by(data = interval, ordinal, mean))/sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2)
gu <- diff(by(data = interval, ordinal, mean))/sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2)
a <- (length(interval) - 2)
a <- length(interval) - 2
a
(sqrt(a/2))
(sqrt(a/2))*gamma(((a-1/)2))
(sqrt(a/2))*gamma((a-1)/2)
gamma(a)/(sqrt(a/2))*gamma((a-1)/2)
a <- length(interval) - 2
gamma(a)/(sqrt(a/2))*gamma((a-1)/2)
(gamma(a)/(sqrt(a/2))*gamma((a-1)/2))*gu
g <- function(ordinal, interval, corrected = TRUE){
g <- diff(by(data = interval, ordinal, mean))/sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2)
if (corrected == TRUE){
a <- length(interval) - 2
g <- (gamma(a)/(sqrt(a/2))*gamma((a-1)/2))*gu
}
return(g)
}
g <- function(ordinal, interval, corrected = TRUE){
g <- diff(by(data = interval, ordinal, mean))/sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2)
if (corrected == TRUE){
a <- length(interval) - 2
g <- (gamma(a)/(sqrt(a/2))*gamma((a-1)/2))*gu
}
return(g)
}
g(ordinal, interval)
interval[ordinal==1]
length(interval[ordinal==1])
length(interval[ordinal==0])
mean(interval[ordinal==0])
mean(interval[ordinal==1])
sd(interval[ordinal==1])
sd(interval[ordinal==0])
g(ordinal, interval, corrected = FALSE)
g <- function(ordinal, interval, corrected = TRUE){
g <- diff(by(data = interval, ordinal, mean))/(sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2))
if (corrected == TRUE){
a <- length(interval) - 2
g <- (gamma(a)/(sqrt(a/2))*gamma((a-1)/2))*gu
}
return(g)
}
g(ordinal, interval, corrected = FALSE)
g(ordinal, interval, corrected = TRUE)
g(ordinal, interval, corrected = FALSE)
g <- function(ordinal, interval, corrected = TRUE){
g <- diff(by(data = interval, ordinal, mean))/(sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2))
if (corrected == TRUE){
a <- length(interval) - 2
g <- (gamma(a)/(sqrt(a/2))*gamma((a-1)/2))*g
}
return(g)
}
g(ordinal, interval, corrected = FALSE)
g <- function(ordinal, interval, corrected = TRUE){
g <- diff(by(data = interval, ordinal, mean))/(sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2))
if (corrected == TRUE){
a <- length(interval) - 2
g <- ((gamma(a/2))/(sqrt(a/2)*gamma((a-1)/2)))*g
}
return(g)
}
g(ordinal, interval, corrected = FALSE)
g(ordinal, interval, corrected = TRUE)
report.ttest(ordinalna = "vs", intervalna = c("disp", "wt", "qsec"), dataset = mtcars)
library(reporter)
report.ttest(ordinalna = "vs", intervalna = c("disp", "wt", "qsec"), dataset = mtcars)
ordinalna <- ordinal
intervalna <- interval
hedgesG<-TRUE
dataset <- mtcars
if (is.factor(dataset[, which(names(dataset)==ordinalna)]) == FALSE){
dataset[, which(names(dataset)==ordinalna)] <- as.factor(dataset[, which(names(dataset)==ordinalna)])
}
if (length(ordinalna) > 1) stop("More than one categorical variable is provided.")
ordinalna
ordinalna <- "vs"
intervalna <- "disp"
if (is.factor(dataset[, which(names(dataset)==ordinalna)]) == FALSE){
dataset[, which(names(dataset)==ordinalna)] <- as.factor(dataset[, which(names(dataset)==ordinalna)])
}
if (length(ordinalna) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(dataset[, which(names(dataset)==ordinalna)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(intervalna), ncol = 6 + nravni)
i <- 1
data <- dataset[, c(which(names(dataset)==ordinalna),  which(names(dataset)==intervalna[i]))]
means <- round(as.vector(by(data = data[, intervalna[i]], INDICES = data[, ordinalna], mean)), 2)
res[i, 1:nravni] <- means
model <- t.test(data[, intervalna[i]] ~ as.factor(data[, ordinalna]))
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- round(model$p.value, 3)
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
as.numeric(hedgesG)
g <- function(ordinal, interval, corrected = TRUE){
g <- diff(by(data = interval, ordinal, mean))/(sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2))
if (corrected == TRUE){
a <- length(interval) - 2
g <- ((gamma(a/2))/(sqrt(a/2)*gamma((a-1)/2)))*g
}
return(g)
}
report.ttest <- function(ordinalna, intervalna, dataset, hedgesG = FALSE){
if (is.factor(dataset[, which(names(dataset)==ordinalna)]) == FALSE){
dataset[, which(names(dataset)==ordinalna)] <- as.factor(dataset[, which(names(dataset)==ordinalna)])
}
if (length(ordinalna) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(dataset[, which(names(dataset)==ordinalna)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(intervalna), ncol = 6 + nravni + as.numeric(hedgesG))
for (i in 1:length(intervalna)) {
data <- dataset[, c(which(names(dataset)==ordinalna),  which(names(dataset)==intervalna[i]))]
means <- round(as.vector(by(data = data[, intervalna[i]], INDICES = data[, ordinalna], mean)), 2)
res[i, 1:nravni] <- means
model <- t.test(data[, intervalna[i]] ~ as.factor(data[, ordinalna]))
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- round(model$p.value, 3)
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
res[i, 6+nravni] <- model$method
res[i, 7+nravni] <- round(g(ordinal = data[, ordinalna], interval = intervalna[i], corrected = TRUE), 2)
}
labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", "method", "Hedges G")
colnames(res) <- labele
rownames(res) <- intervalna
return(res)
}
report.ttest(ordinalna = "vs", intervalna = c("disp", "wt", "qsec"), dataset = mtcars)
data[, ordinalna]
intervalna[i]
data
dataset[, which(names(dataset)==ordinalna)]
dataset[, which(names(dataset)==intervalna[i])]
report.ttest <- function(ordinalna, intervalna, dataset, hedgesG = FALSE){
if (is.factor(dataset[, which(names(dataset)==ordinalna)]) == FALSE){
dataset[, which(names(dataset)==ordinalna)] <- as.factor(dataset[, which(names(dataset)==ordinalna)])
}
if (length(ordinalna) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(dataset[, which(names(dataset)==ordinalna)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(intervalna), ncol = 6 + nravni + as.numeric(hedgesG))
for (i in 1:length(intervalna)) {
data <- dataset[, c(which(names(dataset)==ordinalna),  which(names(dataset)==intervalna[i]))]
means <- round(as.vector(by(data = data[, intervalna[i]], INDICES = data[, ordinalna], mean)), 2)
res[i, 1:nravni] <- means
model <- t.test(data[, intervalna[i]] ~ as.factor(data[, ordinalna]))
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- round(model$p.value, 3)
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
res[i, 6+nravni] <- model$method
res[i, 7+nravni] <- round(g(ordinal = dataset[, which(names(dataset)==ordinalna)], interval = dataset[, which(names(dataset)==intervalna[i])], corrected = TRUE), 2)
}
labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", "method", "Hedges G")
colnames(res) <- labele
rownames(res) <- intervalna
return(res)
}
report.ttest(ordinalna = "vs", intervalna = c("disp", "wt", "qsec"), dataset = mtcars)
report.ttest <- function(ordinalna, intervalna, dataset, hedgesG = FALSE){
if (is.factor(dataset[, which(names(dataset)==ordinalna)]) == FALSE){
dataset[, which(names(dataset)==ordinalna)] <- as.factor(dataset[, which(names(dataset)==ordinalna)])
}
if (length(ordinalna) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(dataset[, which(names(dataset)==ordinalna)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(intervalna), ncol = 6 + nravni + as.numeric(hedgesG))
for (i in 1:length(intervalna)) {
data <- dataset[, c(which(names(dataset)==ordinalna),  which(names(dataset)==intervalna[i]))]
means <- round(as.vector(by(data = data[, intervalna[i]], INDICES = data[, ordinalna], mean)), 2)
res[i, 1:nravni] <- means
model <- t.test(data[, intervalna[i]] ~ as.factor(data[, ordinalna]))
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- round(model$p.value, 3)
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
res[i, 6+nravni] <- model$method
if (hedgesG == TRUE) res[i, 7+nravni] <- round(g(ordinal = dataset[, which(names(dataset)==ordinalna)], interval = dataset[, which(names(dataset)==intervalna[i])], corrected = TRUE), 2)
}
labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", "method", "Hedges G")
colnames(res) <- labele
rownames(res) <- intervalna
return(res)
}
report.ttest(ordinalna = "vs", intervalna = c("disp", "wt", "qsec"), dataset = mtcars)
if (is.factor(dataset[, which(names(dataset)==ordinalna)]) == FALSE){
dataset[, which(names(dataset)==ordinalna)] <- as.factor(dataset[, which(names(dataset)==ordinalna)])
}
if (length(ordinalna) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(dataset[, which(names(dataset)==ordinalna)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(intervalna), ncol = 6 + nravni + as.numeric(hedgesG))
for (i in 1:length(intervalna)) {
data <- dataset[, c(which(names(dataset)==ordinalna),  which(names(dataset)==intervalna[i]))]
means <- round(as.vector(by(data = data[, intervalna[i]], INDICES = data[, ordinalna], mean)), 2)
res[i, 1:nravni] <- means
model <- t.test(data[, intervalna[i]] ~ as.factor(data[, ordinalna]))
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- round(model$p.value, 3)
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
res[i, 6+nravni] <- model$method
if (hedgesG == TRUE) {
res[i, 7+nravni] <- round(g(ordinal = dataset[, which(names(dataset)==ordinalna)],
interval = dataset[, which(names(dataset)==intervalna[i])],
corrected = TRUE), 2)}
}
labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", "method", "Hedges G")
colnames(res) <- labele
rownames(res) <- intervalna
res
labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", "method", ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
labele
hedgesG
hedgesG<-FALSE
labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", "method", ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
labele
labele[!labele %in% ""]
labele <- labele[!labele %in% ""]
report.ttest <- function(ordinalna, intervalna, dataset, hedgesG = FALSE){
if (is.factor(dataset[, which(names(dataset)==ordinalna)]) == FALSE){
dataset[, which(names(dataset)==ordinalna)] <- as.factor(dataset[, which(names(dataset)==ordinalna)])
}
if (length(ordinalna) > 1) stop("More than one categorical variable is provided.")
ravni <- levels(dataset[, which(names(dataset)==ordinalna)])
nravni <- length(ravni)
res <- matrix(NA, nrow = length(intervalna), ncol = 6 + nravni + as.numeric(hedgesG))
for (i in 1:length(intervalna)) {
data <- dataset[, c(which(names(dataset)==ordinalna),  which(names(dataset)==intervalna[i]))]
means <- round(as.vector(by(data = data[, intervalna[i]], INDICES = data[, ordinalna], mean)), 2)
res[i, 1:nravni] <- means
model <- t.test(data[, intervalna[i]] ~ as.factor(data[, ordinalna]))
res[i, 1+nravni] <- round(model$statistic, 2)
res[i, 2+nravni] <- round(model$parameter, 2)
res[i, 3+nravni] <- round(model$p.value, 3)
res[i, 4+nravni] <- round(model$conf.int[1], 2)
res[i, 5+nravni] <- round(model$conf.int[2], 2)
res[i, 6+nravni] <- model$method
if (hedgesG == TRUE) {
res[i, 7+nravni] <- round(g(ordinal = dataset[, which(names(dataset)==ordinalna)],
interval = dataset[, which(names(dataset)==intervalna[i])],
corrected = TRUE), 2)}
}
labele <- c(ravni, "t", "df", "p", "CI95 low", "CI95 high", "method", ifelse(hedgesG==TRUE, yes = "Hedges G", no = ""))
labele <- labele[!labele %in% ""]
colnames(res) <- labele
rownames(res) <- intervalna
return(res)
}
report.ttest(ordinalna = "vs", intervalna = c("disp", "wt", "qsec"), dataset = mtcars)
report.ttest(ordinalna = "vs", intervalna = c("disp", "wt", "qsec"), dataset = mtcars, hedgesG = TRUE)
g(ordinal = mtcars$vs, interval = mtcars$gear, correct = TRUE)
g(ordinal = mtcars$vs, interval = mtcars$gear, correct = TRUE)
library(reporter)
g <- function(ordinal, interval, correct = TRUE){
g <- diff(by(data = interval, ordinal, mean))/(sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2))
if (corrected == TRUE){
a <- length(interval) - 2
g <- ((gamma(a/2))/(sqrt(a/2)*gamma((a-1)/2)))*g
}
return(g)
}
g(ordinal = mtcars$vs, interval = mtcars$gear, correct = TRUE)
g <- function(ordinal, interval, correct = TRUE){
g <- diff(by(data = interval, ordinal, mean))/(sum((by(data = interval, ordinal, length) - 1)*by(data = interval, ordinal, sd))/(length(interval) - 2))
if (correct == TRUE){
a <- length(interval) - 2
g <- ((gamma(a/2))/(sqrt(a/2)*gamma((a-1)/2)))*g
}
return(g)
}
g(ordinal = mtcars$vs, interval = mtcars$gear, correct = TRUE)
library(reporter)
library(reporter)
library(handyReport)
library(handyReport)
library(handyReport)
library(handyReport)
